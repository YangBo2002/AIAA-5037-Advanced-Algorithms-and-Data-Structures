import numpy as np

weights = []
values = []
N = M = 20
dp = np.zeros((N,M), dtype=int)

def Cal_dp(K,W):
    for i in range(0,K+1):
        for j in range(0,W+1):
            if i == 0 or j == 0:
                dp[i][j] = 0

            elif j < weights[i-1]:
                dp[i][j] = dp[i-1][j]
            else:
                dp[i][j] = max(dp[i-1][j],dp[i-1][j-weights[i-1]] + values[i-1])

    return dp[K][W]


if __name__ == '__main__':
    W, K = map(int, input().split())
    for i in range(0,K):
        temp_w,temp_v = map(int, input().split())
        weights.append(temp_w)
        values.append(temp_v)
    ans = Cal_dp(K,W)
    print(ans)
